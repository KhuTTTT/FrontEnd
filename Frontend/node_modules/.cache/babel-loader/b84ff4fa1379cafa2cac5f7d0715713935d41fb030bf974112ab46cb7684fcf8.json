{"ast":null,"code":"var _jsxFileName = \"/Users/zoo/Desktop/Portfolio/Khuthon(2023)/Frontend/src/components/Question.jsx\",\n  _s = $RefreshSig$();\n// Question.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question(props) {\n  _s();\n  const [showAnswer, setShowAnswer] = useState(null);\n  useEffect(() => {\n    if (props.quizData && props.quizData.input) {\n      // Take the latest 5 questions from the quizData\n      const latestQuizData = Object.values(props.quizData.input).slice(-5);\n      setQuizData(latestQuizData);\n    }\n  }, [props.quizData]);\n  if (!props.quizData || !props.quizData.input) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px',\n        fontWeight: 'bold',\n        marginLeft: '890px'\n      },\n      children: \"\\uD30C\\uC77C\\uC744 \\uCCA8\\uBD80\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const handleShowAnswer = index => {\n    if (showAnswer === index) {\n      setShowAnswer(null); // 이미 답이 표시중인 질문의 버튼을 누르면 답을 숨김\n    } else {\n      setShowAnswer(index); // 그 외의 경우에는 답을 표시\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.values(props.quizData.input).map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"questionTitle\",\n        children: [\"Q\", index + 1, \": \", q.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowAnswer(index),\n        className: \"AnswerBtn\",\n        children: \"\\uB2F5 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answerOption\",\n        style: {\n          color: showAnswer === index ? 'red' : 'black'\n        },\n        children: [\"1. \", q.answer[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), q.wrong.map((w, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answerOption\",\n        children: [index + 2, \". \", w]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"Mu76tKdqULQcrAnXvWIzZRUgDdw=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Question","props","_s","showAnswer","setShowAnswer","useEffect","quizData","input","latestQuizData","Object","values","slice","setQuizData","style","marginTop","fontWeight","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","handleShowAnswer","index","map","q","className","question","onClick","color","answer","wrong","w","_c","$RefreshReg$"],"sources":["/Users/zoo/Desktop/Portfolio/Khuthon(2023)/Frontend/src/components/Question.jsx"],"sourcesContent":["// Question.js\nimport React, { useState } from 'react';\n\nfunction Question(props) {\n  const [showAnswer, setShowAnswer] = useState(null);\n\n  useEffect(() => {\n    if (props.quizData && props.quizData.input) {\n      // Take the latest 5 questions from the quizData\n      const latestQuizData = Object.values(props.quizData.input).slice(-5);\n      setQuizData(latestQuizData);\n    }\n  }, [props.quizData]);\n\n  if (!props.quizData || !props.quizData.input) {\n    return <div style={{ marginTop: '30px', fontWeight: 'bold', marginLeft: '890px' }}>파일을 첨부해주세요.</div>;\n  }\n\n  const handleShowAnswer = (index) => {\n    if (showAnswer === index) {\n      setShowAnswer(null); // 이미 답이 표시중인 질문의 버튼을 누르면 답을 숨김\n    } else {\n      setShowAnswer(index); // 그 외의 경우에는 답을 표시\n    }\n  };\n\n  return (\n    <div>\n      {Object.values(props.quizData.input).map((q, index) => (\n        <div key={index} className='questionContainer'>\n          <h2 className='questionTitle'>\n            Q{index + 1}: {q.question}\n          </h2>\n          <button onClick={() => handleShowAnswer(index)} className='AnswerBtn'>\n            답 보기\n          </button>\n          <div className='answerOption' style={{ color: showAnswer === index ? 'red' : 'black' }}>\n            1. {q.answer[0]}\n          </div>\n          {q.wrong.map((w, index) => (\n            <div key={index} className='answerOption'>\n              {index + 2}. {w}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Question;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}